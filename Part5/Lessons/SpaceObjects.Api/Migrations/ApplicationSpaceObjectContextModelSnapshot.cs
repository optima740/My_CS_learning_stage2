// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpaceObjects.Api.DataAccessLayer;

namespace SpaceObjects.Api.Migrations
{
    [DbContext(typeof(ApplicationSpaceObjectContext))]
    partial class ApplicationSpaceObjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("SpaceObjects.Api.Models.SpaceObject", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Diametr")
                        .HasColumnType("REAL");

                    b.Property<float>("DistToSun")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("id");

                    b.ToTable("SpaceObjects");
                });

            modelBuilder.Entity("SpaceObjects.Api.Models.Asteroid", b =>
                {
                    b.HasBaseType("SpaceObjects.Api.Models.SpaceObject");

                    b.Property<float>("Speed")
                        .HasColumnType("REAL");

                    b.ToTable("Asteroids");
                });

            modelBuilder.Entity("SpaceObjects.Api.Models.BlackHole", b =>
                {
                    b.HasBaseType("SpaceObjects.Api.Models.SpaceObject");

                    b.Property<float>("Density")
                        .HasColumnType("REAL");

                    b.ToTable("BlackHole");
                });

            modelBuilder.Entity("SpaceObjects.Api.Models.Planet", b =>
                {
                    b.HasBaseType("SpaceObjects.Api.Models.SpaceObject");

                    b.Property<float>("TiltAngle")
                        .HasColumnType("REAL");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("SpaceObjects.Api.Models.Star", b =>
                {
                    b.HasBaseType("SpaceObjects.Api.Models.SpaceObject");

                    b.Property<float>("DegOfIllumination")
                        .HasColumnType("REAL");

                    b.ToTable("Stars");
                });

            modelBuilder.Entity("SpaceObjects.Api.Models.Asteroid", b =>
                {
                    b.HasOne("SpaceObjects.Api.Models.SpaceObject", null)
                        .WithOne()
                        .HasForeignKey("SpaceObjects.Api.Models.Asteroid", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpaceObjects.Api.Models.BlackHole", b =>
                {
                    b.HasOne("SpaceObjects.Api.Models.SpaceObject", null)
                        .WithOne()
                        .HasForeignKey("SpaceObjects.Api.Models.BlackHole", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpaceObjects.Api.Models.Planet", b =>
                {
                    b.HasOne("SpaceObjects.Api.Models.SpaceObject", null)
                        .WithOne()
                        .HasForeignKey("SpaceObjects.Api.Models.Planet", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpaceObjects.Api.Models.Star", b =>
                {
                    b.HasOne("SpaceObjects.Api.Models.SpaceObject", null)
                        .WithOne()
                        .HasForeignKey("SpaceObjects.Api.Models.Star", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
